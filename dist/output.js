// Generated by psc-bundle 0.7.4.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  }

  exports._makeAff = function (cb) {
    return function(success, error) {
      return cb(function(e) {
        return function() {
          error(e);
        };
      })(function(v) {
        return function() {
          try {
            success(v);
          } catch (e) {
            error(e);
          }
        };
      })();
    }
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      try {
        success(v);
      } catch (e) {
        error(e);
      }

      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(f(v));
        } catch (e) {
          error(e);
        }
      }, error);
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                try {
                  s(true);
                } catch (e) {
                  f(e);
                }
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        try {
          successT(v)();
        } catch (e) {
          errorT(e)();
        }
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      try {
        success(e());
      } catch (e) {
        error(e);
      }

      return nonCanceler;
    };
  }
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Show = function (show) {
      this.show = show;
  };                                                                           
  var unit = {};
  var showString = new Show($foreign.showStringImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (__dict_Show_1) {
      return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var $$const = function (a) {
      return function (_68) {
          return a;
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var liftM1 = function (__dict_Monad_23) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_8) {
                  return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_8));
              });
          };
      };
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_10) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_9) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_10(_9));
                  });
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["liftM1"] = liftM1;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupArray"] = semigroupArray;
  exports["eqString"] = eqString;
  exports["showString"] = showString;
  exports["showArray"] = showArray;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.liftEff = liftEff;
  };                                 
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;;
 
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["throwException"] = $foreign.throwException;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_336) {
              if (_336 instanceof Nothing) {
                  return b;
              };
              if (_336 instanceof Just) {
                  return f(_336.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _336.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_20) {
      return function (__dict_Monoid_21) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_20)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_21["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_21))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_22) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_22);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_421) {
          if (_421 instanceof Left) {
              return new Left(_421.value0);
          };
          if (_421 instanceof Right) {
              return new Right(f(_421.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _421.constructor.name ]);
      };
  });
  var either = function (f) {
      return function (g) {
          return function (_420) {
              if (_420 instanceof Left) {
                  return f(_420.value0);
              };
              if (_420 instanceof Right) {
                  return g(_420.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _420.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_423) {
      return function (r) {
          if (_423 instanceof Left) {
              return new Left(_423.value0);
          };
          if (_423 instanceof Right) {
              return Prelude["<$>"](functorEither)(_423.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _423.constructor.name, r.constructor.name ]);
      };
  });
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };

  exports.runFn5 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };

  exports.runFn6 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return function (f) {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  exports["runFn6"] = $foreign.runFn6;
  exports["runFn5"] = $foreign.runFn5;
  exports["runFn3"] = $foreign.runFn3;;
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var launchAff = function (_1415) {
      return runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))($foreign._unsafeInterleaveAff(_1415));
  };
  var functorAff = new Prelude.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var applyAff = new Prelude.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Prelude["<$>"](functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Prelude.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
          };
      });
  };                                                       
  var bindAff = new Prelude.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Prelude.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  exports["runAff"] = runAff;
  exports["nonCanceler"] = nonCanceler;
  exports["makeAff"] = makeAff;
  exports["launchAff"] = launchAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;;
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var print = function (__dict_Show_0) {
      return function (_806) {
          return $foreign.log(Prelude.show(__dict_Show_0)(_806));
      };
  };
  exports["print"] = print;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_451) {
      return _451;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_474) {
          return f(_474);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_475) {
      return function (_476) {
          return _475(_476);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_477) {
      return function (f) {
          return f(_477);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (_500) {
      return _500.value1;
  };
  exports["Tuple"] = Tuple;
  exports["snd"] = snd;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var MonadState = function (__superclass_Prelude$dotMonad_0, state) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (__dict_MonadState_0) {
      return function (s) {
          return state(__dict_MonadState_0)(function (_565) {
              return new Data_Tuple.Tuple(Prelude.unit, s);
          });
      };
  };
  var modify = function (__dict_MonadState_1) {
      return function (f) {
          return state(__dict_MonadState_1)(function (s) {
              return new Data_Tuple.Tuple(Prelude.unit, f(s));
          });
      };
  };
  var get = function (__dict_MonadState_3) {
      return state(__dict_MonadState_3)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["MonadState"] = MonadState;
  exports["modify"] = modify;
  exports["put"] = put;
  exports["get"] = get;
  exports["state"] = state;;
 
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];     
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (_591) {
      return _591;
  };
  var monadStateT = function (__dict_Monad_5) {
      return new Prelude.Monad(function () {
          return applicativeStateT(__dict_Monad_5);
      }, function () {
          return bindStateT(__dict_Monad_5);
      });
  };
  var functorStateT = function (__dict_Monad_14) {
      return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_14)));
  };
  var bindStateT = function (__dict_Monad_17) {
      return new Prelude.Bind(function () {
          return applyStateT(__dict_Monad_17);
      }, function (_592) {
          return function (f) {
              return function (s) {
                  return Prelude.bind(__dict_Monad_17["__superclass_Prelude.Bind_1"]())(_592(s))(function (_44) {
                      return runStateT(f(_44.value0))(_44.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (__dict_Monad_18) {
      return new Prelude.Apply(function () {
          return functorStateT(__dict_Monad_18);
      }, Prelude.ap(monadStateT(__dict_Monad_18)));
  };
  var applicativeStateT = function (__dict_Monad_19) {
      return new Prelude.Applicative(function () {
          return applyStateT(__dict_Monad_19);
      }, function (a) {
          return StateT(function (s) {
              return Prelude["return"](__dict_Monad_19["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
          });
      });
  };
  var monadStateStateT = function (__dict_Monad_6) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(__dict_Monad_6);
      }, function (f) {
          return StateT(function (_1853) {
              return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(f(_1853));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadStateStateT"] = monadStateStateT;;
 
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var runState = function (s) {
      return function (_1854) {
          return Data_Identity.runIdentity(Control_Monad_State_Trans.runStateT(s)(_1854));
      };
  };
  var execState = function (m) {
      return function (s) {
          return Data_Tuple.snd(runState(m)(s));
      };
  };
  exports["execState"] = execState;
  exports["runState"] = runState;;
 
})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var foldM = function (__dict_Monad_10) {
      return function (f) {
          return function (a) {
              return $foreign["uncons'"](function (_605) {
                  return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(a);
              })(function (b) {
                  return function (bs) {
                      return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                          return foldM(__dict_Monad_10)(f)(a$prime)(bs);
                      });
                  };
              });
          };
      };
  };
  exports["foldM"] = foldM;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Either.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Either.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];     
  var fromRight = function (_444) {
      if (_444 instanceof Data_Either.Right) {
          return _444.value0;
      };
      return $foreign.unsafeThrow("Data.Either.Unsafe.fromRight called on Left value");
  };
  exports["fromRight"] = fromRight;;
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 1
  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["isNull"] = $foreign.isNull;
  exports["typeOf"] = $foreign.typeOf;
  exports["unsafeFromForeign"] = $foreign.unsafeFromForeign;
  exports["toForeign"] = $foreign.toForeign;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Index

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];     
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };
  var $bang = function (__dict_Index_0) {
      return ix(__dict_Index_0);
  };                         
  var hasPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasProperty(p, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasOwnProperty(p, value);
          };
          return false;
      };
  };                                                                                                                   
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["!"] = $bang;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;;
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Keys

  exports.unsafeKeys = Object.keys || function (value) {
    var keys = [];
    for (var prop in value) {
      if (Object.prototype.hasOwnProperty.call(value, prop)) {
        keys.push(prop);
      }
    }
    return keys;
  };
 
})(PS["Data.Foreign.Keys"] = PS["Data.Foreign.Keys"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign.Keys"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];     
  var keys = function (value) {
      if (Data_Foreign.isNull(value)) {
          return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
      };
      if (Data_Foreign.isUndefined(value)) {
          return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
      };
      if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object")) {
          return Data_Either.Right.create($foreign.unsafeKeys(value));
      };
      return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value)));
  };
  exports["keys"] = keys;;
 
})(PS["Data.Foreign.Keys"] = PS["Data.Foreign.Keys"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var semigroupoidLeibniz = new Prelude.Semigroupoid(function (_212) {
      return function (_213) {
          return Unsafe_Coerce.unsafeCoerce;
      };
  });
  var categoryLeibniz = new Prelude.Category(function () {
      return semigroupoidLeibniz;
  }, Prelude.id(Prelude.categoryFn));
  exports["semigroupoidLeibniz"] = semigroupoidLeibniz;
  exports["categoryLeibniz"] = categoryLeibniz;;
 
})(PS["Data.Leibniz"] = PS["Data.Leibniz"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Nullable

  exports["null"] = null;

  exports.notNull = function(x) {
      return x;
  }; 
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];     
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;;
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var CanSwitchContext = function (switchContext) {
      this.switchContext = switchContext;
  };
  var switchContext = function (dict) {
      return dict.switchContext;
  };
  exports["CanSwitchContext"] = CanSwitchContext;
  exports["switchContext"] = switchContext;;
 
})(PS["Lovefield.CanSwitchContext"] = PS["Lovefield.CanSwitchContext"] || {});
(function(exports) {
  "use strict"

  // module Lovefield.Internal.Exists


  exports.mkExists0 = function (value) { return value; };
  exports.mkExists2 = function (value) { return value; };


  exports.runExists0 = function (f) { return f; };
  exports.runExists2 = function (f) { return f; };
 
})(PS["Lovefield.Internal.Exists"] = PS["Lovefield.Internal.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Lovefield.Internal.Exists"];
  exports["runExists2"] = $foreign.runExists2;
  exports["runExists0"] = $foreign.runExists0;
  exports["mkExists2"] = $foreign.mkExists2;
  exports["mkExists0"] = $foreign.mkExists0;;
 
})(PS["Lovefield.Internal.Exists"] = PS["Lovefield.Internal.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Leibniz = PS["Data.Leibniz"];
  var Data_Date = PS["Data.Date"];
  var Data_Foreign = PS["Data.Foreign"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];
  var Int = (function () {
      function Int(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Int.create = function (value0) {
          return function (value1) {
              return new Int(value0, value1);
          };
      };
      return Int;
  })();
  var $$Number = (function () {
      function Number(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Number.create = function (value0) {
          return function (value1) {
              return new Number(value0, value1);
          };
      };
      return Number;
  })();
  var $$String = (function () {
      function String(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      String.create = function (value0) {
          return function (value1) {
              return new String(value0, value1);
          };
      };
      return String;
  })();
  var $$Boolean = (function () {
      function Boolean(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Boolean.create = function (value0) {
          return function (value1) {
              return new Boolean(value0, value1);
          };
      };
      return Boolean;
  })();
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  var $$ArrayBuffer = (function () {
      function ArrayBuffer(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ArrayBuffer.create = function (value0) {
          return function (value1) {
              return new ArrayBuffer(value0, value1);
          };
      };
      return ArrayBuffer;
  })();
  var $$Object = (function () {
      function Object(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Object.create = function (value0) {
          return function (value1) {
              return new Object(value0, value1);
          };
      };
      return Object;
  })();
  var Nullable = (function () {
      function Nullable(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Nullable.create = function (value0) {
          return function (value1) {
              return new Nullable(value0, value1);
          };
      };
      return Nullable;
  })();
  var HasColumnDescription = function (column) {
      this.column = column;
  };
  var IsNullable = function (nullable) {
      this.nullable = nullable;
  };
  var stringHasColumnDescription = new HasColumnDescription(function (name) {
      return Lovefield_Internal_Exists.mkExists0(new $$String(name, Prelude.id(Data_Leibniz.categoryLeibniz)));
  });
  var objectHasColumnDescription = new HasColumnDescription(function (name) {
      return Lovefield_Internal_Exists.mkExists0(new $$Object(name, Prelude.id(Data_Leibniz.categoryLeibniz)));
  });
  var nullable = function (dict) {
      return dict.nullable;
  };
  var intHasColumnDescription = new HasColumnDescription(function (name) {
      return Lovefield_Internal_Exists.mkExists0(new Int(name, Prelude.id(Data_Leibniz.categoryLeibniz)));
  });
  var defaultNullable = function (cd) {
      return Lovefield_Internal_Exists.mkExists0(new Nullable(cd, Prelude.id(Data_Leibniz.categoryLeibniz)));
  };
  var intIsNullable = new IsNullable(defaultNullable);
  var columnName = function (_51) {
      var impl = function (cdu) {
          if (cdu instanceof Int) {
              return cdu.value0;
          };
          if (cdu instanceof $$Number) {
              return cdu.value0;
          };
          if (cdu instanceof $$String) {
              return cdu.value0;
          };
          if (cdu instanceof $$Boolean) {
              return cdu.value0;
          };
          if (cdu instanceof DateTime) {
              return cdu.value0;
          };
          if (cdu instanceof $$ArrayBuffer) {
              return cdu.value0;
          };
          if (cdu instanceof $$Object) {
              return cdu.value0;
          };
          if (cdu instanceof Nullable) {
              return columnName(cdu.value0);
          };
          throw new Error("Failed pattern match at Lovefield.ColumnDescription line 35, column 5 - line 36, column 5: " + [ cdu.constructor.name ]);
      };
      return Lovefield_Internal_Exists.runExists0(impl)(_51);
  };
  var column = function (dict) {
      return dict.column;
  };
  exports["Int"] = Int;
  exports["Number"] = $$Number;
  exports["String"] = $$String;
  exports["Boolean"] = $$Boolean;
  exports["DateTime"] = DateTime;
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Object"] = $$Object;
  exports["Nullable"] = Nullable;
  exports["IsNullable"] = IsNullable;
  exports["HasColumnDescription"] = HasColumnDescription;
  exports["nullable"] = nullable;
  exports["column"] = column;
  exports["columnName"] = columnName;
  exports["intHasColumnDescription"] = intHasColumnDescription;
  exports["stringHasColumnDescription"] = stringHasColumnDescription;
  exports["objectHasColumnDescription"] = objectHasColumnDescription;
  exports["intIsNullable"] = intIsNullable;;
 
})(PS["Lovefield.ColumnDescription"] = PS["Lovefield.ColumnDescription"] || {});
(function(exports) {
  "use strict"

  // module Lovefield.Connect

  exports.createNative = function (name, version) {
    return function () {
      return lf.schema.create(name, version);
    }
  }

  exports.createTableNative = function (name, sb) {
    return function () {
      return sb.createTable(name);
    }
  }

  function stringToLFType(type) {
    switch (type) {
      case "int":
        return lf.Type.INTEGER;
      case "number":
        return lf.Type.NUMBER;
      case "string":
        return lf.Type.STRING;
      case "boolean":
        return lf.Type.BOOLEAN;
      case "datetime":
        return lf.Type.DATE_TIME;
      case "arrayobject":
        return lf.Type.ARRAY_BUFFER;
      case "object":
        return lf.Type.OBJECT;
      default:
        throw Error("Invalid marshaled lf type " + type);
    }
  }

  exports.addColumnNative = function (name, type, tb) {
    return function () {
      return tb.addColumn(name, stringToLFType(type));
    }
  }

  exports.addPrimaryKey = function (columns, autoIncrement, tb) {
    return function () {
      return tb.addPrimaryKey(columns, autoIncrement);
    }
  }

  exports.addUnique = function (name, columns, tb) {
    return function () {
      return tb.addUnique(name, columns);
    }
  }

  exports.addForeignKey = function (fkname, tb) {
    return function () {
      return tb.addForeignKey(fkname);
    }
  }

  exports.addNullable = function (columns, tb) {
    return function () {
      return tb.addNullable(columns);
    }
  }

  exports.connectNative = function (sb, error, success) {
    return function () {
      return sb.connect()
               .then(function (db) { return success(db)(); })
               .catch(function (e) { return error(e)(); });
    }
  }
 
})(PS["Lovefield.Connect"] = PS["Lovefield.Connect"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];
  var Lovefield_ColumnDescription = PS["Lovefield.ColumnDescription"];     
  var PrimaryKeys = (function () {
      function PrimaryKeys(value0) {
          this.value0 = value0;
      };
      PrimaryKeys.create = function (value0) {
          return new PrimaryKeys(value0);
      };
      return PrimaryKeys;
  })();
  var AutoIncrement = (function () {
      function AutoIncrement(value0) {
          this.value0 = value0;
      };
      AutoIncrement.create = function (value0) {
          return new AutoIncrement(value0);
      };
      return AutoIncrement;
  })();
  var PrimaryKey = (function () {
      function PrimaryKey(value0) {
          this.value0 = value0;
      };
      PrimaryKey.create = function (value0) {
          return new PrimaryKey(value0);
      };
      return PrimaryKey;
  })();
  var Unique = (function () {
      function Unique(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unique.create = function (value0) {
          return function (value1) {
              return new Unique(value0, value1);
          };
      };
      return Unique;
  })();
  var ForeignKey = (function () {
      function ForeignKey(value0) {
          this.value0 = value0;
      };
      ForeignKey.create = function (value0) {
          return new ForeignKey(value0);
      };
      return ForeignKey;
  })();
  var Table = (function () {
      function Table(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Table.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Table(value0, value1, value2);
              };
          };
      };
      return Table;
  })();
  var Schema = (function () {
      function Schema(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Schema.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Schema(value0, value1, value2);
              };
          };
      };
      return Schema;
  })();
  exports["PrimaryKey"] = PrimaryKey;
  exports["Unique"] = Unique;
  exports["ForeignKey"] = ForeignKey;
  exports["PrimaryKeys"] = PrimaryKeys;
  exports["AutoIncrement"] = AutoIncrement;
  exports["Schema"] = Schema;
  exports["Table"] = Table;;
 
})(PS["Lovefield.Schema"] = PS["Lovefield.Schema"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Lovefield.Connect"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Either_Unsafe = PS["Data.Either.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Keys = PS["Data.Foreign.Keys"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Lovefield_Native = PS["Lovefield.Native"];
  var Lovefield_Schema = PS["Lovefield.Schema"];
  var Lovefield_ColumnDescription = PS["Lovefield.ColumnDescription"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];     
  var addConstraint = function (tb) {
      return function (constraint) {
          if (constraint instanceof Lovefield_Schema.PrimaryKey && constraint.value0 instanceof Lovefield_Schema.PrimaryKeys) {
              return $foreign.addPrimaryKey(constraint.value0.value0, false, tb);
          };
          if (constraint instanceof Lovefield_Schema.PrimaryKey && constraint.value0 instanceof Lovefield_Schema.AutoIncrement) {
              return $foreign.addPrimaryKey([ constraint.value0.value0 ], true, tb);
          };
          if (constraint instanceof Lovefield_Schema.ForeignKey) {
              return $foreign.addForeignKey(constraint.value0, tb);
          };
          if (constraint instanceof Lovefield_Schema.Unique) {
              return $foreign.addUnique(constraint.value0, constraint.value1, tb);
          };
          throw new Error("Failed pattern match at Lovefield.Connect line 61, column 1 - line 66, column 1: " + [ constraint.constructor.name ]);
      };
  };
  var addColumn = function (tb) {
      return function (_53) {
          var impl = function (cdu) {
              if (cdu instanceof Lovefield_ColumnDescription.Int) {
                  return $foreign.addColumnNative(cdu.value0, "int", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription["Number"]) {
                  return $foreign.addColumnNative(cdu.value0, "number", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription["String"]) {
                  return $foreign.addColumnNative(cdu.value0, "string", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription["Boolean"]) {
                  return $foreign.addColumnNative(cdu.value0, "boolean", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription.DateTime) {
                  return $foreign.addColumnNative(cdu.value0, "date", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription["ArrayBuffer"]) {
                  return $foreign.addColumnNative(cdu.value0, "arraybuffer", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription["Object"]) {
                  return $foreign.addColumnNative(cdu.value0, "object", tb);
              };
              if (cdu instanceof Lovefield_ColumnDescription.Nullable) {
                  return function __do() {
                      var _7 = addColumn(tb)(cdu.value0)();
                      return $foreign.addNullable([ Lovefield_ColumnDescription.columnName(cdu.value0) ], _7)();
                  };
              };
              throw new Error("Failed pattern match at Lovefield.Connect line 46, column 5 - line 47, column 5: " + [ cdu.constructor.name ]);
          };
          return Lovefield_Internal_Exists.runExists0(impl)(_53);
      };
  };
  var buildTable = function (sb) {
      return function (_54) {
          var foreignColumns = Data_Foreign.toForeign(_54.value2);
          var ks = Data_Either.either(Prelude["const"]([  ]))(Prelude.id(Prelude.categoryFn))(Data_Foreign_Keys.keys(foreignColumns));
          var constraintActions = function (tb) {
              return Data_Array.foldM(Control_Monad_Eff.monadEff)(addConstraint)(tb)(_54.value1);
          };
          var columnDescriptions = Prelude.map(Prelude.functorArray)(function (_379) {
              return Data_Foreign.unsafeFromForeign(Data_Either_Unsafe.fromRight(Data_Foreign_Index["!"](Data_Foreign_Index.indexString)(foreignColumns)(_379)));
          })(ks);
          var columnActions = function (tb) {
              return Data_Array.foldM(Control_Monad_Eff.monadEff)(addColumn)(tb)(columnDescriptions);
          };
          return function __do() {
              var _10 = $foreign.createTableNative(_54.value0, sb)();
              var _9 = columnActions(_10)();
              var _8 = constraintActions(_9)();
              return Prelude.unit;
          };
      };
  };
  var connect = function (_52) {
      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)($foreign.createNative(_52.value0, _52.value1)))(function (_6) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Lovefield_Internal_Exists.runExists2(buildTable(_6)))(_52.value2)))(function () {
              return Control_Monad_Aff.makeAff(Data_Function.runFn3($foreign.connectNative)(_6));
          });
      });
  };
  exports["connect"] = connect;;
 
})(PS["Lovefield.Connect"] = PS["Lovefield.Connect"] || {});
(function(exports) {
  "use strict"

  // module Lovefield.Insert

  exports.insertOrReplaceNative = function (db, tableName, values, error, success) {
    return function () {
      var table = db.getSchema().table(tableName);
      var rows = values.map(function (v) { return table.createRow(v); });
      return db.insertOrReplace().into(table).values(rows).exec()
        .then(function () { success(PS["Prelude"].unit)(); })
        .catch(function (e) { error(e)(); });
    }
  }
 
})(PS["Lovefield.Insert"] = PS["Lovefield.Insert"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Lovefield.Insert"];
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Function = PS["Data.Function"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Lovefield_Native = PS["Lovefield.Native"];
  var Lovefield_Schema = PS["Lovefield.Schema"];     
  var insertOrReplace = function (db) {
      return function (_55) {
          return function (_56) {
              return function (values) {
                  return Control_Monad_Aff.makeAff(Data_Function.runFn5($foreign.insertOrReplaceNative)(db)(_56.value0)(values));
              };
          };
      };
  };
  exports["insertOrReplace"] = insertOrReplace;;
 
})(PS["Lovefield.Insert"] = PS["Lovefield.Insert"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];
  var Lovefield_Schema = PS["Lovefield.Schema"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var OpEq = (function () {
      function OpEq() {

      };
      OpEq.value = new OpEq();
      return OpEq;
  })();
  var AttrExpr = (function () {
      function AttrExpr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrExpr.create = function (value0) {
          return function (value1) {
              return new AttrExpr(value0, value1);
          };
      };
      return AttrExpr;
  })();
  var TernExpr = (function () {
      function TernExpr(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      TernExpr.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new TernExpr(value0, value1, value2, value3);
                  };
              };
          };
      };
      return TernExpr;
  })();
  var BinExpr = (function () {
      function BinExpr(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      BinExpr.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new BinExpr(value0, value1, value2);
              };
          };
      };
      return BinExpr;
  })();
  var UnExpr = (function () {
      function UnExpr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnExpr.create = function (value0) {
          return function (value1) {
              return new UnExpr(value0, value1);
          };
      };
      return UnExpr;
  })();
  var ConstExpr = (function () {
      function ConstExpr(value0) {
          this.value0 = value0;
      };
      ConstExpr.create = function (value0) {
          return new ConstExpr(value0);
      };
      return ConstExpr;
  })();
  var BaseTable = (function () {
      function BaseTable(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BaseTable.create = function (value0) {
          return function (value1) {
              return new BaseTable(value0, value1);
          };
      };
      return BaseTable;
  })();
  var Project = (function () {
      function Project(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Project.create = function (value0) {
          return function (value1) {
              return new Project(value0, value1);
          };
      };
      return Project;
  })();
  var Restrict = (function () {
      function Restrict(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Restrict.create = function (value0) {
          return function (value1) {
              return new Restrict(value0, value1);
          };
      };
      return Restrict;
  })();
  var Times = (function () {
      function Times(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Times.create = function (value0) {
          return function (value1) {
              return new Times(value0, value1);
          };
      };
      return Times;
  })();
  var EmptyQuery = (function () {
      function EmptyQuery() {

      };
      EmptyQuery.value = new EmptyQuery();
      return EmptyQuery;
  })();
  var matchOnPrimExpr = function (attr) {
      return function (tern) {
          return function (bin) {
              return function (un) {
                  return function ($$const) {
                      return function (expr) {
                          if (expr instanceof AttrExpr) {
                              return attr(expr.value0)(expr.value1);
                          };
                          if (expr instanceof TernExpr) {
                              return tern(expr.value0)(expr.value1)(expr.value2)(expr.value3);
                          };
                          if (expr instanceof BinExpr) {
                              return bin(expr.value0)(expr.value1)(expr.value2);
                          };
                          if (expr instanceof UnExpr) {
                              return un(expr.value0)(expr.value1);
                          };
                          if (expr instanceof ConstExpr) {
                              return Lovefield_Internal_Exists.runExists0(function (_199) {
                                  return $$const(_199);
                              })(expr.value0);
                          };
                          throw new Error("Failed pattern match at Lovefield.Internal.PrimExpr line 61, column 1 - line 62, column 1: " + [ expr.constructor.name ]);
                      };
                  };
              };
          };
      };
  };
  exports["OpEq"] = OpEq;
  exports["AttrExpr"] = AttrExpr;
  exports["TernExpr"] = TernExpr;
  exports["BinExpr"] = BinExpr;
  exports["UnExpr"] = UnExpr;
  exports["ConstExpr"] = ConstExpr;
  exports["BaseTable"] = BaseTable;
  exports["Project"] = Project;
  exports["Restrict"] = Restrict;
  exports["Times"] = Times;
  exports["EmptyQuery"] = EmptyQuery;
  exports["matchOnPrimExpr"] = matchOnPrimExpr;;
 
})(PS["Lovefield.Internal.PrimExpr"] = PS["Lovefield.Internal.PrimExpr"] || {});
(function(exports) {
  "use strict"

  // module Lovefield.Query

  function curry(fx) {
    // http://blog.carbonfive.com/2015/01/14/gettin-freaky-functional-wcurried-javascript/
    var arity = fx.length;

    return function f1() {
      var args = Array.prototype.slice.call(arguments, 0);
      if (args.length >= arity) {
        return fx.apply(null, args);
      } else {
        return function f2() {
          var args2 = Array.prototype.slice.call(arguments, 0);
          return f1.apply(null, args.concat(args2));
        }
      }
    };
  }

  exports.runQueryNative = function (db, froms, wheres, matchOnPrimExpr, error, success) {
    return function () {
      var schema = db.getSchema();

      var aliases = [];
      for (var i = 0; i < froms.length; i++) {
        var f = froms[i];
        aliases[f.alias] = schema.table(f.name).as('t' + f.alias);
      }

      var extractAttr = matchOnPrimExpr
          (curry(function (alias, name) { // AttrExpr, got it
            return aliases[alias][name];
          }))
          (function (_) { throw new Error("TernExpr is not AttrExpr") })
          (function (_) { throw new Error("BinExpr is not AttrExpr") })
          (function (_) { throw new Error("UnExpr is not AttrExpr") })
          (function (_) { throw new Error("ConstExpr is not AttrExpr") });

      var extractConst = matchOnPrimExpr
          (function (_) { throw new Error("AttrExpr is not ConstExpr") })
          (function (_) { throw new Error("TernExpr is not ConstExpr") })
          (function (_) { throw new Error("BinExpr is not ConstExpr") })
          (function (_) { throw new Error("UnExpr is not ConstExpr") })
          (function (literal) { return lf.bind(literal); });

      var extractConstAndExpr = matchOnPrimExpr
          (curry(function (alias, name) { // AttrExpr, got it
            return aliases[alias][name];
          }))
          (function (_) { throw new Error("TernExpr is not ConstExpr") })
          (function (_) { throw new Error("BinExpr is not ConstExpr") })
          (function (_) { throw new Error("UnExpr is not ConstExpr") })
          (function (literal) { return lf.bind(literal); });

      function whereToLF(w) {
        return matchOnPrimExpr
          (function (_) { throw new Error("AttrExpr is not of type Expr Bool") })
          (curry(function (op, a, b, c) { // TernExpr, there's only between
            var ps = PS["Lovefield.Internal.PrimExpr"] || {};
            if (op instanceof ps.OpBetween) {
              return extractAttr(a).between(extractConst(b), extractConst(c));
            } else {
              throw new Error("Unknown TernOp " + op);
            }
          }))
          (curry(function (op, a, b) { // BinExpr
            var ps = PS["Lovefield.Internal.PrimExpr"] || {};
            if (op instanceof ps.OpEq) {
              return extractAttr(a).eq(extractConstAndExpr(b));
            } else if (op instanceof ps.OpNotEq) {
              return extractAttr(a).neq(extractConstAndExpr(b));
            } else if (op instanceof ps.OpLt) {
              return extractAttr(a).lt(extractConstAndExpr(b));
            } else if (op instanceof ps.OpLtEq) {
              return extractAttr(a).lte(extractConstAndExpr(b));
            } else if (op instanceof ps.OpGt) {
              return extractAttr(a).gt(extractConstAndExpr(b));
            } else if (op instanceof ps.OpGtEq) {
              return extractAttr(a).gte(extractConstAndExpr(b));
            } else if (op instanceof ps.OpMatch) {
              return extractAttr(a).match(extractConstAndExpr(b));
            } else if (op instanceof ps.OpIn) {
              return extractAttr(a).in(extractConstAndExpr(b));
            } else {
              throw new Error("Unknown BinOp " + op);
            }
          }))
          (curry(function (op, a) { // UnExpr
            var ps = PS["Lovefield.Internal.PrimExpr"] || {};
            if (op instanceof ps.OpIsNull) {
              return extractAttr(a).isNull();
            } else if (op instanceof ps.OpIsNotNull) {
              return extractAttr(a).isNotNull();
            } else {
              throw new Error("Unknown UnOp " + op);
            }
          }))
          (function (_) { throw new Error("ConstExpr is not of type Expr Bool") })
          (w.condition);
      };


      var q = db.select();
      q = q.from.apply(q, aliases);
      if (wheres.length > 0) {
          var clauses = wheres.map(whereToLF);
          q = q.where(clauses.length > 1 ? lf.op.and(clauses) : clauses[0]);
      }
      return q.exec()
        .then(function (rows) { return success(rows)(); })
        .catch(function (e) { return error(e)(); });
    };
  };
 
})(PS["Lovefield.Query"] = PS["Lovefield.Query"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Lovefield.Query"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Debug_Trace = PS["Debug.Trace"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];
  var Lovefield_Internal_PrimExpr = PS["Lovefield.Internal.PrimExpr"];
  var Lovefield_CanSwitchContext = PS["Lovefield.CanSwitchContext"];
  var Lovefield_App = PS["Lovefield.App"];
  var Lovefield_ColumnDescription = PS["Lovefield.ColumnDescription"];
  var Lovefield_Schema = PS["Lovefield.Schema"];
  var Lovefield_Native = PS["Lovefield.Native"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_List = PS["Data.List"];     
  var Query = function (x) {
      return x;
  };
  var $greater$greater$minus = function (__dict_CanSwitchContext_0) {
      return function (_6) {
          return function (continuation) {
              return Query(Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(_6)(function (_1) {
                  var _21 = continuation(_1);
                  return _21;
              }));
          };
      };
  };
  var where_ = function (_8) {
      return Query(Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (qs) {
          var _23 = {};
          for (var _24 in qs) {
              if (qs.hasOwnProperty(_24)) {
                  _23[_24] = qs[_24];
              };
          };
          _23.query = new Lovefield_Internal_PrimExpr.Restrict(_8, qs.query);
          return _23;
      }))(function () {
          return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Prelude.unit);
      }));
  };
  var select = function (expr) {
      return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(expr);
  };
  var newAlias = Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (_0) {
      return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
          var _73 = {};
          for (var _74 in _0) {
              if (_0.hasOwnProperty(_74)) {
                  _73[_74] = _0[_74];
              };
          };
          _73.alias = _0.alias + 1 | 0;
          return _73;
      })()))(function () {
          return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(_0.alias);
      });
  });
  var initialState = {
      alias: 0, 
      query: Lovefield_Internal_PrimExpr.EmptyQuery.value
  };
  var runQuery = function (__dict_CanSwitchContext_1) {
      return function (db) {
          return function (_11) {
              var wheres = function (query) {
                  if (query instanceof Lovefield_Internal_PrimExpr.EmptyQuery) {
                      return [  ];
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.BaseTable) {
                      return [  ];
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Restrict) {
                      return Prelude["++"](Prelude.semigroupArray)([ {
                          condition: query.value0
                      } ])(wheres(query.value1));
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Times) {
                      return Prelude["++"](Prelude.semigroupArray)(wheres(query.value0))(wheres(query.value1));
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Project) {
                      return wheres(query.value1);
                  };
                  throw new Error("Failed pattern match at Lovefield.Query line 183, column 1 - line 189, column 1: " + [ query.constructor.name ]);
              };
              var tableName = Lovefield_Internal_Exists.runExists2(function (_5) {
                  return _5.value0;
              });
              var qs = Control_Monad_State.execState(_11)(initialState);
              var froms = function (query) {
                  if (query instanceof Lovefield_Internal_PrimExpr.EmptyQuery) {
                      return [  ];
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.BaseTable) {
                      return [ {
                          alias: query.value0, 
                          name: tableName(query.value1)
                      } ];
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Restrict) {
                      return froms(query.value1);
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Times) {
                      return Prelude["++"](Prelude.semigroupArray)(froms(query.value0))(froms(query.value1));
                  };
                  if (query instanceof Lovefield_Internal_PrimExpr.Project) {
                      return froms(query.value1);
                  };
                  throw new Error("Failed pattern match at Lovefield.Query line 183, column 1 - line 189, column 1: " + [ query.constructor.name ]);
              };
              var execute = function (query) {
                  return Control_Monad_Aff.makeAff(Data_Function.runFn6($foreign.runQueryNative)(db)(froms(query))(wheres(query))(Lovefield_Internal_PrimExpr.matchOnPrimExpr));
              };
              return execute(qs.query);
          };
      };
  };
  var columnDescriptionToExpr = function (alias) {
      return function (cd) {
          return new Lovefield_Internal_PrimExpr.AttrExpr(alias, Lovefield_ColumnDescription.columnName(cd));
      };
  };
  var from = function (__dict_CanSwitchContext_2) {
      return function (_7) {
          return Query(Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(newAlias)(function (_2) {
              return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (qs) {
                  var _101 = {};
                  for (var _102 in qs) {
                      if (qs.hasOwnProperty(_102)) {
                          _101[_102] = qs[_102];
                      };
                  };
                  _101.query = new Lovefield_Internal_PrimExpr.Times(qs.query, new Lovefield_Internal_PrimExpr.BaseTable(_2, Lovefield_Internal_Exists.mkExists2(_7)));
                  return _101;
              }))(function () {
                  return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Lovefield_CanSwitchContext.switchContext(__dict_CanSwitchContext_2)(columnDescriptionToExpr(_2))(_7.value2));
              });
          }));
      };
  };
  var binOp = function (op) {
      return function (_9) {
          return function (_10) {
              return new Lovefield_Internal_PrimExpr.BinExpr(op, _9, _10);
          };
      };
  };
  var $dot$eq$eq$dot = function (a) {
      return function (b) {
          return binOp(Lovefield_Internal_PrimExpr.OpEq.value)(a)(b);
      };
  };
  exports[".==."] = $dot$eq$eq$dot;
  exports["runQuery"] = runQuery;
  exports["where_"] = where_;
  exports["select"] = select;
  exports[">>-"] = $greater$greater$minus;
  exports["from"] = from;;
 
})(PS["Lovefield.Query"] = PS["Lovefield.Query"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Lovefield_ColumnDescription = PS["Lovefield.ColumnDescription"];
  var Lovefield_Query = PS["Lovefield.Query"];
  var Lovefield_Connect = PS["Lovefield.Connect"];
  var Lovefield_Insert = PS["Lovefield.Insert"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Lovefield = PS["Lovefield"];
  var Lovefield_Internal_Exists = PS["Lovefield.Internal.Exists"];
  var Lovefield_CanSwitchContext = PS["Lovefield.CanSwitchContext"];
  var Lovefield_App = PS["Lovefield.App"];
  var Lovefield_Schema = PS["Lovefield.Schema"];     
  var Names = function (x) {
      return x;
  };
  var names = (function () {
      var constraints = [ new Lovefield_Schema.PrimaryKey(new Lovefield_Schema.AutoIncrement("id")) ];
      var columnDescription = {
          id: Lovefield_ColumnDescription.column(Lovefield_ColumnDescription.intHasColumnDescription)("id"), 
          name: Lovefield_ColumnDescription.column(Lovefield_ColumnDescription.stringHasColumnDescription)("name"), 
          age: Lovefield_ColumnDescription.nullable(Lovefield_ColumnDescription.intIsNullable)(Lovefield_ColumnDescription.column(Lovefield_ColumnDescription.intHasColumnDescription)("age")), 
          bag: Lovefield_ColumnDescription.column(Lovefield_ColumnDescription.objectHasColumnDescription)("bag")
      };
      return new Lovefield_Schema.Table("Names", constraints, columnDescription);
  })();
  var schema = new Lovefield_Schema.Schema("MyDB", 1, [ Lovefield_Internal_Exists.mkExists2(names) ]);
  var name = function (_7) {
      return Data_Identity.runIdentity(_7.name);
  };
  var mkNames = function (id) {
      return function (name_1) {
          return function (age) {
              return function (bag) {
                  return {
                      id: id, 
                      name: name_1, 
                      age: age, 
                      bag: bag
                  };
              };
          };
      };
  };
  var namesCanSwitchContext = new Lovefield_CanSwitchContext.CanSwitchContext(function (f) {
      return function (_8) {
          return mkNames(f(_8.id))(f(_8.name))(f(_8.age))(f(_8.bag));
      };
  });
  var query1 = Lovefield_Query[">>-"](namesCanSwitchContext)(Lovefield_Query.from(namesCanSwitchContext)(names))(function (_3) {
      return Lovefield_Query.select(_3);
  });
  var query2 = Lovefield_Query[">>-"](namesCanSwitchContext)(Lovefield_Query.from(namesCanSwitchContext)(names))(function (_6) {
      return Lovefield_Query[">>-"](namesCanSwitchContext)(Lovefield_Query.from(namesCanSwitchContext)(names))(function (_5) {
          return Lovefield_Query[">>-"](namesCanSwitchContext)(Lovefield_Query.where_(Lovefield_Query[".==."](_6.name)(_5.name)))(function (_4) {
              return Lovefield_Query.select(_6);
          });
      });
  });
  var bert = {
      id: 1, 
      name: "Bert", 
      age: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
      bag: Data_Nullable.toNullable(new Data_Maybe.Just(Data_Foreign.toForeign("blah")))
  };
  var main = Control_Monad_Aff.launchAff(Prelude.bind(Control_Monad_Aff.bindAff)(Lovefield_Connect.connect(schema))(function (_2) {
      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.print(Prelude.showString)("connected")))(function () {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Lovefield_Insert.insertOrReplace(_2)(schema)(names)([ bert ]))(function () {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.print(Prelude.showString)("inserted")))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Lovefield_Query.runQuery(namesCanSwitchContext)(_2)(query1))(function (_1) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.print(Prelude.showArray(Prelude.showString))(Prelude.map(Prelude.functorArray)(name)(_1))))(function () {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(Lovefield_Query.runQuery(namesCanSwitchContext)(_2)(query2))(function (_0) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.print(Prelude.showArray(Prelude.showString))(Prelude.map(Prelude.functorArray)(name)(_0)));
                          });
                      });
                  });
              });
          });
      });
  }));
  exports["Names"] = Names;
  exports["main"] = main;
  exports["query2"] = query2;
  exports["query1"] = query1;
  exports["name"] = name;
  exports["schema"] = schema;
  exports["mkNames"] = mkNames;
  exports["bert"] = bert;
  exports["names"] = names;
  exports["namesCanSwitchContext"] = namesCanSwitchContext;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
